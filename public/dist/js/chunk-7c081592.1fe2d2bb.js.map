{"version":3,"sources":["webpack:///./src/views/base/socket/SocketServer.vue","webpack:///./node_modules/_engine.io-client@6.4.0@engine.io-client/build/esm/contrib/has-cors.js","webpack:///./node_modules/_engine.io-client@6.4.0@engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack:///./node_modules/_engine.io-client@6.4.0@engine.io-client/build/esm/transports/polling.js","webpack:///./node_modules/_engine.io-client@6.4.0@engine.io-client/build/esm/transports/index.js","webpack:///./node_modules/_engine.io-client@6.4.0@engine.io-client/build/esm/contrib/parseuri.js","webpack:///./node_modules/_engine.io-client@6.4.0@engine.io-client/build/esm/socket.js","webpack:///./node_modules/_engine.io-client@6.4.0@engine.io-client/build/esm/index.js","webpack:///./node_modules/_socket.io-client@4.6.1@socket.io-client/build/esm/url.js","webpack:///./node_modules/_socket.io-parser@4.2.2@socket.io-parser/build/esm/is-binary.js","webpack:///./node_modules/_socket.io-parser@4.2.2@socket.io-parser/build/esm/binary.js","webpack:///./node_modules/_socket.io-parser@4.2.2@socket.io-parser/build/esm/index.js","webpack:///./node_modules/_socket.io-client@4.6.1@socket.io-client/build/esm/on.js","webpack:///./node_modules/_socket.io-client@4.6.1@socket.io-client/build/esm/socket.js","webpack:///./node_modules/_socket.io-client@4.6.1@socket.io-client/build/esm/contrib/backo2.js","webpack:///./node_modules/_socket.io-client@4.6.1@socket.io-client/build/esm/manager.js","webpack:///./node_modules/_socket.io-client@4.6.1@socket.io-client/build/esm/index.js","webpack:///src/views/base/socket/SocketServer.vue","webpack:///./src/views/base/socket/SocketServer.vue?5cba","webpack:///./src/views/base/socket/SocketServer.vue?8476","webpack:///./src/views/base/socket/SocketServer.vue?e510","webpack:///./node_modules/_engine.io-parser@5.0.6@engine.io-parser/build/esm/commons.js","webpack:///./node_modules/_engine.io-parser@5.0.6@engine.io-parser/build/esm/encodePacket.browser.js","webpack:///./node_modules/_engine.io-parser@5.0.6@engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack:///./node_modules/_engine.io-parser@5.0.6@engine.io-parser/build/esm/decodePacket.browser.js","webpack:///./node_modules/_engine.io-parser@5.0.6@engine.io-parser/build/esm/index.js","webpack:///./node_modules/_engine.io-client@6.4.0@engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack:///./node_modules/_engine.io-client@6.4.0@engine.io-client/build/esm/contrib/yeast.js","webpack:///./node_modules/_engine.io-client@6.4.0@engine.io-client/build/esm/contrib/parseqs.js","webpack:///./node_modules/_engine.io-client@6.4.0@engine.io-client/build/esm/util.js","webpack:///./src/api/main.js","webpack:///./node_modules/_engine.io-client@6.4.0@engine.io-client/build/esm/transport.js","webpack:///./node_modules/_@socket.io_component-emitter@3.1.0@@socket.io/component-emitter/index.mjs","webpack:///./node_modules/_engine.io-client@6.4.0@engine.io-client/build/esm/transports/websocket.js","webpack:///./node_modules/_engine.io-client@6.4.0@engine.io-client/build/esm/globalThis.browser.js"],"names":["render","_vm","this","_c","_self","attrs","_m","staticClass","_v","_s","currentStatus","servicAddress","on","$event","sendRequest","staticRenderFns","value","XMLHttpRequest","err","hasCORS","XHR","opts","xdomain","e","concat","join","empty","hasXHR2","xhr","responseType","super","polling","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","supportsBinary","poll","onPause","readyState","pause","writable","total","once","doPoll","emitReserved","data","callback","packet","type","onOpen","onClose","description","onPacket","socket","binaryType","forEach","close","write","packets","doWrite","query","schema","timestampRequests","timestampParam","yeast","sid","b64","Number","encodedQuery","ipv6","indexOf","path","length","Object","assign","uri","fn","req","request","method","xhrStatus","context","onError","onData","bind","pollXhr","async","undefined","create","xscheme","open","extraHeaders","setDisableHeaderCheck","i","hasOwnProperty","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","setTimeoutFn","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","addEventListener","terminationEvent","transports","websocket","re","parts","parse","str","src","b","substring","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","obj","regx","names","split","slice","splice","$0","$1","$2","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","removeAllListeners","offlineEventListener","name","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","reason","failed","onTransportOpen","msg","upgrading","flush","Error","freezeTransport","onerror","error","onTransportClose","onclose","onupgrade","to","removeListener","off","l","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","clearTimeoutFn","autoUnref","unref","getWritablePackets","shouldCheckPayloadSize","payloadSize","options","compress","push","cleanupAndClose","waitForUpgrade","removeEventListener","filteredUpgrades","j","url","loc","charAt","test","href","withNativeArrayBuffer","ArrayBuffer","isView","buffer","prototype","toString","withNativeBlob","Blob","call","withNativeFile","File","isBinary","hasBinary","toJSON","Array","isArray","arguments","key","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","newData","Date","reconstructPacket","_reconstructPacket","isIndexValid","PacketType","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","reviver","reconstructor","decodeString","isBinaryEvent","base64","takeBinaryData","p","start","buf","c","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","finishedReconstruction","reconPack","binData","ev","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","subs","onopen","onpacket","subEvents","_readyState","args","emit","apply","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","_a","ackTimeout","timer","withErr","Promise","resolve","reject","arg1","arg2","tryCount","pending","responseArgs","hasError","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","sameNamespace","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","listeners","listener","self","sent","emitBuffered","subDestroy","_anyOutgoingListeners","Backoff","ms","min","max","factor","jitter","attempts","duration","Math","pow","rand","random","deviation","floor","reset","setMin","setMax","setJitter","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","Decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","clearTimeout","onping","ondata","ondecoded","add","active","keys","_close","encodedPackets","encode","delay","onreconnect","attempt","cache","lookup","parsed","newConnection","forceNew","multiplex","Manager","Socket","mounted","init","methods","console","log","$message","ipcApiRoute","doSocketRequest","cmd","params","response","component","PACKET_TYPES","PACKET_TYPES_REVERSE","ERROR_PACKET","encodePacket","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","readAsDataURL","chars","Uint8Array","charCodeAt","decode","encoded1","encoded2","encoded3","encoded4","bufferLength","len","arraybuffer","bytes","decodePacket","encodedPacket","mapBinary","decodeBase64Packet","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","count","decodePayload","encodedPayload","decodedPacket","nextTick","isPromiseAvailable","cb","then","WebSocket","MozWebSocket","usingBrowserWebSocket","defaultBinaryType","alphabet","map","prev","seed","encoded","now","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","pick","attr","reduce","acc","k","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","useNativeTimers","BASE64_OVERHEAD","byteLength","utf8Length","ceil","size","messageShow","messageShowConfirm","selectFolder","openDirectory","loadViewContent","removeViewContent","createWindow","sendNotification","initPowerMonitor","getScreen","openSoftware","autoLaunch","setTheme","getTheme","checkForUpdater","downloadApp","dbOperation","sqlitedbOperation","uploadFile","checkHttpServer","doHttpRequest","ipcInvokeMsg","ipcSendSyncMsg","ipcSendMsg","getWCid","startJavaServer","closeJavaServer","someJob","timerJobProgress","hello","dllApiRoute","ExecDll","specialIpcRoute","appUpdater","window1ToWindow2","window2ToWindow1","requestHttp","parameter","config","storage","get","server","TransportError","Transport","doOpen","doClose","details","Emitter","mixin","event","_callbacks","callbacks","hasListeners","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","_socket","closeEvent","onmessage","lastPacket","Buffer","globalThisShim","window","Function"],"mappings":"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","file":"js/chunk-7c081592.1fe2d2bb.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app-base-httpserver\"}},[_vm._m(0),_c('div',{staticClass:\"one-block-2\"},[_c('a-space',[_c('p',[_vm._v(\"* 状态：\"+_vm._s(_vm.currentStatus))])]),_c('p',[_vm._v(\"* 地址：\"+_vm._s(_vm.servicAddress))])],1),_vm._m(1),_c('div',{staticClass:\"one-block-2\"},[_c('a-space',[_c('a-button',{on:{\"click\":function($event){return _vm.sendRequest('downloads')}}},[_vm._v(\" 打开【我的下载】 \")])],1)],1)])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"one-block-1\"},[_c('span',[_vm._v(\" 1. 内置socket-io server服务 \")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"one-block-1\"},[_c('span',[_vm._v(\" 2. 发送请求 \")])])\n}]\n\nexport { render, staticRenderFns }","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","<template>\n  <div id=\"app-base-httpserver\">\n    <div class=\"one-block-1\">\n      <span>\n        1. 内置socket-io server服务\n      </span>\n    </div>\n    <div class=\"one-block-2\">\n      <a-space>\n        <p>* 状态：{{ currentStatus }}</p>\n      </a-space>\n      <p>* 地址：{{ servicAddress }}</p>\n    </div>\n    <div class=\"one-block-1\">\n      <span>\n        2. 发送请求\n      </span>\n    </div>\n    <div class=\"one-block-2\">\n      <a-space>\n        <a-button @click=\"sendRequest('downloads')\"> 打开【我的下载】 </a-button>\n      </a-space>\n    </div>\n  </div>\n</template>\n<script>\nimport { io } from 'socket.io-client'\nimport { ipcApiRoute, requestHttp } from '@/api/main'\n\nexport default {\n  data() {\n    return {\n      currentStatus: '关闭',\n      servicAddress: 'ws://localhost:7070'\n    };\n  },\n  mounted () {\n    this.init();\n  },\n  methods: {\n    init () {\n      const self = this;\n      this.socket = io(this.servicAddress);\n      this.socket.on('connect', () => {\n        console.log('connect!!!!!!!!');\n        self.currentStatus = '开启';\n      });\n    },\n    sendRequest (id) {\n      if (this.currentStatus == '关闭') {\n        this.$message.error('socketio服务未开启');\n        return;\n      }\n\n      const method = ipcApiRoute.doSocketRequest;\n      this.socket.emit('c1', { cmd: method, params: {id: id} }, (response) => {\n        // response为返回值\n        console.log('response:', response)\n      });\n    },\n  }\n};\n</script>\n<style lang=\"less\" scoped>\n#app-base-httpserver {\n  padding: 0px 10px;\n  text-align: left;\n  width: 100%;\n  .one-block-1 {\n    font-size: 16px;\n    padding-top: 10px;\n  }\n  .one-block-2 {\n    padding-top: 10px;\n  }\n}\n</style>\n","import mod from \"-!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../../node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/_vue-loader@15.10.1@vue-loader/lib/index.js??vue-loader-options!./SocketServer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../../node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/_vue-loader@15.10.1@vue-loader/lib/index.js??vue-loader-options!./SocketServer.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SocketServer.vue?vue&type=template&id=77b17dca&scoped=true&\"\nimport script from \"./SocketServer.vue?vue&type=script&lang=js&\"\nexport * from \"./SocketServer.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SocketServer.vue?vue&type=style&index=0&id=77b17dca&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/_vue-loader@15.10.1@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"77b17dca\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../node_modules/_mini-css-extract-plugin@0.9.0@mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../node_modules/_vue-loader@15.10.1@vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/_less-loader@5.0.0@less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/_vue-loader@15.10.1@vue-loader/lib/index.js??vue-loader-options!./SocketServer.vue?vue&type=style&index=0&id=77b17dca&prod&lang=less&scoped=true&\"","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import storage from 'store2'\nimport request from '@/utils/request'\n\n/**\n * 路由定义（主进程与渲染进程通信频道定义）\n */\nconst ipcApiRoute = {\n  test: 'controller.example.test',\n  messageShow: 'controller.example.messageShow',\n  messageShowConfirm: 'controller.example.messageShowConfirm',\n  selectFolder: 'controller.example.selectFolder',\n  openDirectory: 'controller.example.openDirectory',\n  loadViewContent: 'controller.example.loadViewContent',\n  removeViewContent: 'controller.example.removeViewContent',\n  createWindow: 'controller.example.createWindow',\n  sendNotification: 'controller.example.sendNotification',\n  initPowerMonitor: 'controller.example.initPowerMonitor',\n  getScreen: 'controller.example.getScreen',\n  openSoftware: 'controller.example.openSoftware',\n  autoLaunch: 'controller.example.autoLaunch',\n  setTheme: 'controller.example.setTheme',\n  getTheme: 'controller.example.getTheme',\n  checkForUpdater: 'controller.example.checkForUpdater',\n  downloadApp: 'controller.example.downloadApp',\n  dbOperation: 'controller.example.dbOperation',\n  sqlitedbOperation: 'controller.example.sqlitedbOperation',\n  uploadFile: 'controller.example.uploadFile',\n  checkHttpServer: 'controller.example.checkHttpServer',\n  doHttpRequest: 'controller.example.doHttpRequest',\n  doSocketRequest: 'controller.example.doSocketRequest',\n  ipcInvokeMsg: 'controller.example.ipcInvokeMsg',\n  ipcSendSyncMsg: 'controller.example.ipcSendSyncMsg',\n  ipcSendMsg: 'controller.example.ipcSendMsg',\n  getWCid: 'controller.example.getWCid',\n  startJavaServer: 'controller.example.startJavaServer',\n  closeJavaServer: 'controller.example.closeJavaServer',\n  someJob: 'controller.example.someJob',\n  timerJobProgress: 'controller.example.timerJobProgress',\n  hello: 'controller.example.hello',\n}\n\nconst dllApiRoute = {\n  ExecDll: 'controller.out.execDll.execDll',\n}\n\n/**\n * 特殊的路由（频道）定义\n */\nconst specialIpcRoute = {\n  appUpdater: 'app.updater', // 此频道在后端也有相同定义\n  window1ToWindow2: 'window1-to-window2', // 窗口之间通信\n  window2ToWindow1: 'window2-to-window1', // 窗口之间通信\n}\n\n/**\n * 访问内置http服务\n */\nconst requestHttp = (uri, parameter) => {\n  // url转换\n  const config = storage.get('httpServiceConfig');\n  const host = config.server || 'http://localhost:7071';\n  let url = uri.split('.').join('/');\n  url = host + '/' + url;\n  console.log('url:', url);\n  return request({\n    url: url,\n    method: 'post',\n    data: parameter, // body\n    params: {}, // URL 参数\n    timeout: 60000,\n  })\n}\n\nexport {\n  ipcApiRoute,\n  dllApiRoute,\n  specialIpcRoute,\n  requestHttp,\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n}\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n"],"sourceRoot":""}